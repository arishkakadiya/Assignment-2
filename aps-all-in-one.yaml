




# Deployment for Store Admin
apiVersion: apps/v1
kind: Deployment
metadata:
  name: store-admin
spec:
  replicas: 1
  selector:
    matchLabels:
      app: store-admin
  template:
    metadata:
      labels:
        app: store-admin
    spec:
      nodeSelector:
        "kubernetes.io/os": linux
      containers:
        - name: store-admin
          image: arishkakadiya/store-admin:latest # Admin interface for store
          ports:
            - containerPort: 8081 # Admin app port
              name: store-admin
          env: # Environment variables for backend URLs
            - name: VUE_APP_PRODUCT_SERVICE_URL
              value: "http://product-service:3002/"
            - name: VUE_APP_MAKELINE_SERVICE_URL
              value: "http://makeline-service:3001/"
          resources: # Resource requests and limits
            requests:
              cpu: 1m
              memory: 200Mi
            limits:
              cpu: 1000m
              memory: 512Mi
          startupProbe: # Initial health check
            httpGet:
              path: /health
              port: 8081
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 5
          readinessProbe: # Ready status probe
            httpGet:
              path: /health
              port: 8081
            failureThreshold: 3
            initialDelaySeconds: 3
            periodSeconds: 5
          livenessProbe: # Ongoing health check
            httpGet:
              path: /health
              port: 8081
            failureThreshold: 5
            initialDelaySeconds: 3
            periodSeconds: 3
---
# Service for Store Admin
apiVersion: v1
kind: Service
metadata:
  name: store-admin
spec:
  ports:
    - port: 80 # Service port exposed outside the cluster
      targetPort: 8081
  selector:
    app: store-admin
  type: LoadBalancer # Expose service externally via load balancer
---
# Deployment for AI Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ai-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ai-service
  template:
    metadata:
      labels:
        app: ai-service
    spec:
      nodeSelector:
        "kubernetes.io/os": linux
      containers:
        - name: ai-service
          image: arishkakadiya/ai-service:latest
          ports:
            - containerPort: 5001
          env:
            - name: USE_AZURE_OPENAI # set to True for Azure OpenAI, False for Public OpenAI
              value: "True"
            - name: AZURE_OPENAI_API_VERSION
              value: "2024-07-01-preview"
            - name: AZURE_OPENAI_DEPLOYMENT_NAME # required if using Azure OpenAI
              value: ""
            - name: AZURE_OPENAI_ENDPOINT # required if using Azure OpenAI
              value: ""
            - name: AZURE_OPENAI_DALLE_ENDPOINT
              value: ""
            - name: AZURE_OPENAI_DALLE_DEPLOYMENT_NAME
              value: ""
            - name: OPENAI_API_KEY # always required
              valueFrom:
                secretKeyRef:
                  name: openai-api-secret
                  key: OPENAI_API_KEY
          resources:
            requests:
              cpu: 20m
              memory: 50Mi
            limits:
              cpu: 50m
              memory: 128Mi
          startupProbe:
            httpGet:
              path: /health
              port: 5001
            initialDelaySeconds: 60
            failureThreshold: 3
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /health
              port: 5001
            initialDelaySeconds: 3
            failureThreshold: 10
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /health
              port: 5001
            initialDelaySeconds: 3
            failureThreshold: 10
            periodSeconds: 10
---
# Service for AI Service
apiVersion: v1
kind: Service
metadata:
  name: ai-service
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 5001
      targetPort: 5001
  selector:
    app: ai-service
